---
import "@/styles/global.css";

import { ViewTransitions } from "astro:transitions";

import Footer from "@/components/footer.astro";
import Header from "@/components/header.astro";

type Props = {
  title?: string;
};

const { title = "Mantram" } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <ViewTransitions />

    {
      /**
       * This script sets the page's theme depending on whether the theme is set
       * in localstorage. If not, follow the device's theme.
       */
    }
    <script is:inline>
      function setDarkClass(doc) {
        if (
          localStorage.getItem("theme") === "dark" ||
          (!("theme" in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
          doc.documentElement.classList.add("dark");
        } else {
          doc.documentElement.classList.remove("dark");
        }
      }

      setDarkClass(document);

      document.addEventListener("astro:before-swap", (e) => {
        setDarkClass(e.newDocument);
      });
    </script>

    {/* This script listens and reacts to the device/OS's theme changes. */}
    <script>
      window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", (e) => {
          if (!("theme" in localStorage)) {
            document.documentElement.classList[e.matches ? "add" : "remove"](
              "dark",
            );
          }
        });
    </script>
  </head>

  <body class="relative flex min-h-screen flex-col bg-background">
    <Header />
    <main class="flex flex-1">
      <slot />
    </main>
    <Footer />
  </body>
</html>
